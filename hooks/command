#!/bin/bash

set -euo pipefail

echo "--- Preparing plugin"
DL="${BUILDKITE_PLUGIN_SMOKE_TEST_DOWNLOAD:-}"
DIST="${BUILDKITE_PLUGIN_SMOKE_TEST_DISTRIBUTION:-stretch}"

if [[ "${BUILDKITE_PLUGIN_SMOKE_TEST_SLUG:-false}" =~ (true|on|1) ]] ; then
  DL="${DL}/${BUILDKITE_PIPELINE_SLUG}"
  echo "New download: $DL"
fi

case "$DIST" in
  jessie)
    AMI=ami-221ea342
    ;;
  stretch)
    AMI=ami-dac6b5a2
    ;;
  *)
    echo "Invalid distribution."
    exit 1
    ;;
esac

if [[ -n "$BUILDKITE_TAG" ]]; then
  REL=testing
else
  REL=unstable
fi

echo "--- Creating test instance"
cd ..
smoke="smoke-${BUILDKITE_PIPELINE_SLUG}-${BUILDKITE_BUILD_NUMBER}"
instance=$(aws ec2 run-instances --image-id $AMI --security-group-ids sg-79aad61d --count 1 --instance-type t2.small --subnet-id subnet-eb094a9c --key-name aws --query 'Instances[0].InstanceId' | cut -d'"' -f2)
echo "$instance" > ./instance
cleanup() {
  [[ -z "$instance" ]] && read -r instance < ./instance
  [[ $instance ]] && aws ec2 terminate-instances --instance-ids "$instance"
  rm -rf "$smoke"
  cd ..
  rm -rf "$smoke"
}
trap cleanup EXIT

echo "--- Getting test scripts"
git clone https://github.com/open-switch/opx-test "$smoke"

echo "--- Getting packages to test"
buildkite-agent artifact download "$DL/*" .

echo "--- Waiting for instance"
aws ec2 wait instance-status-ok --instance-ids "$instance"
aws ec2 create-tags --resources "$instance" --tags "Key=Name,Value=$smoke"
instance_ip=$(aws ec2 describe-instances --instance-ids "$instance" --query 'Reservations[0].Instances[0].PublicIpAddress' | cut -d'"' -f2)
printf "[devices]\nbaseVM ansible_host=$instance_ip\n[devices:vars]\nansible_user=admin" >"$smoke/hosts"

echo "--- Copying packages to instance and creating index"
ssh_aws="ssh -o StrictHostKeyChecking=no admin@$instance_ip"
$ssh_aws "printf 'Package: *\nPin: origin \"\"\nPin-Priority: 1001' | sudo tee /etc/apt/preferences"
$ssh_aws 'sudo apt-get -qq update && sudo apt-get -qq install -y dirmngr dpkg-dev'
$ssh_aws 'mkdir mydebs'
scp -o StrictHostKeychecking=no "$DL"/* "admin@$instance_ip:mydebs/"
$ssh_aws 'cd mydebs && dpkg-scanpackages -m . 2>/dev/null | gzip -9c >Packages.gz'
$ssh_aws 'echo "deb [trusted=yes] file:/home/admin/mydebs ./" | sudo tee -a /etc/apt/sources.list'

echo "--- Installing packages"
$ssh_aws 'sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys AD5073F1'
$ssh_aws "echo 'deb http://deb.openswitch.net/$DIST $REL main opx opx-non-free' | sudo tee -a /etc/apt/sources.list"
$ssh_aws 'sudo apt-get -qq update'
$ssh_aws 'sudo apt-get install -y opx-dell-vm && echo "Installed opx-dell-vm"'

echo "--- Rebooting instance"
aws ec2 reboot-instances --instance-ids "$instance"
aws ec2 wait instance-status-ok --instance-ids "$instance"
sleep 240

echo "+++ Running smoke test on $BUILDKITE_PIPELINE_SLUG"
pushd "$smoke"
ansible-playbook opx_smoketest.yaml -i hosts --extra-vars "dut=baseVM" -u admin
